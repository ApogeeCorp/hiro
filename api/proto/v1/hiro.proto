syntax = "proto3";

option go_package = "github.com/ModelRocket/hiro/pkg/hiro/pb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

package hiro;

service Hiro {
    rpc AudienceCreate(AudienceCreateRequest) returns (Audience);
    rpc AudienceUpdate(AudienceUpdateRequest) returns (Audience);
    rpc AudienceGet(AudienceGetRequest) returns (Audience);
    rpc AudienceList(AudienceListRequest) returns (stream Audience);
    rpc AudienceDelete(AudienceDeleteRequest) returns (google.protobuf.Empty);

    rpc SecretCreate(SecretCreateRequest) returns (Secret);
    rpc SecreteDelete(SecretDeleteRequest) returns (google.protobuf.Empty);
}

message AudienceCreateRequest {
    string name = 1;
    optional string description = 2;
    uint64 token_lifetime = 3;
    Secret.TokenAlgorithm token_algorithm = 4;
    uint64 session_lifetime = 5;
    repeated string permissions = 6;
    google.protobuf.Struct metadata = 7;
}

message AudienceUpdateRequest {
    message PermissionsUpdate {
        repeated string add = 1;
        repeated string remove = 2;
        bool overwrite = 3;
    }

    string id = 1;
    optional string name = 2;
    optional string description = 3;
    optional uint64 token_lifetime = 4;
    optional Secret.TokenAlgorithm token_algorithm = 5;
    optional uint64 session_lifetime = 6;
    optional PermissionsUpdate permissions = 7;
    google.protobuf.Struct metadata = 8;
}

message AudienceGetRequest {
    oneof get_by {
        string id = 1;
        string name = 2;
    }
}

message AudienceListRequest{
    uint64 limit = 1;
    uint64 offset = 2;
}

message AudienceDeleteRequest {
    string id = 1;
}

message Audience {
    string id = 1;
    string name = 2;
    string slug = 3;
    optional string description = 4;
    repeated Secret secrets = 5;
    Secret.TokenAlgorithm token_algorithm = 6;
    uint64 token_lifetime = 7;
    uint64 session_lifetime = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
    repeated string permissions = 11;
    google.protobuf.Struct metadata = 12;
}

message SecretCreateRequest {
    Secret.SecretType type = 1;
    string audience_id = 2;
    Secret.TokenAlgorithm algorithm = 3;
    optional string key = 4;
    google.protobuf.Timestamp expires_at = 5;
}

message SecretDeleteRequest {
    string id = 1;
}

message Secret {
    enum SecretType {
        TOKEN = 0;
        SESSION = 1;
    }

    enum TokenAlgorithm {
        NONE = 0;
        RS256 = 1;
        HS256 = 2;
    }

    string id = 1;
    SecretType type = 2;
    string audience_id = 3;
    optional TokenAlgorithm algorithm = 4;
    string key = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp expires_at = 7;
}

